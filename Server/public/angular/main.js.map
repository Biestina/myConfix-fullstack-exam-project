{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/builder/builder.component.ts","./src/app/components/builder/builder.component.html","./src/app/components/hardwares/hardwares.component.ts","./src/app/components/hardwares/hardwares.component.html","./src/app/components/hardwares/hw-details/hw-details.component.ts","./src/app/components/hardwares/hw-details/hw-details.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/myconfigs/config-details/config-details.component.ts","./src/app/components/myconfigs/config-details/config-details.component.html","./src/app/components/myconfigs/myconfigs.component.ts","./src/app/components/myconfigs/myconfigs.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/models/hardware.model.ts","./src/app/services/auth.service.ts","./src/app/services/category.service.ts","./src/app/services/guard/auth.guard.ts","./src/app/services/http/base-http.service.ts","./src/app/services/http/config-http.service.ts","./src/app/services/http/hardware-http.service.ts","./src/app/services/http/user-http.service.ts","./src/environments/environment.ts","./src/interceptors/authentication.interceptor.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HardwaresComponent } from './components/hardwares/hardwares.component';\nimport { BuilderComponent } from './components/builder/builder.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { MyconfigsComponent } from './components/myconfigs/myconfigs.component';\nimport { AuthGuard } from './services/guard/auth.guard';\nimport { ConfigDetailsComponent } from './components/myconfigs/config-details/config-details.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'hardwares', component: HardwaresComponent },\n  {\n    path: ':userId/builder',\n    component: BuilderComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'configs/:userId/myconfigs',\n    component: MyconfigsComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'configs/:userId/myconfigs/:configId',\n    component: ConfigDetailsComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","<header class=\"mb-5 pb-5\">\n  <app-navbar></app-navbar>\n</header>\n\n<router-outlet></router-outlet>\n\n<footer></footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { BuilderComponent } from './components/builder/builder.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HardwaresComponent } from './components/hardwares/hardwares.component';\nimport { HwDetailsComponent } from './components/hardwares/hw-details/hw-details.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MyconfigsComponent } from './components/myconfigs/myconfigs.component';\nimport { ConfigDetailsComponent } from './components/myconfigs/config-details/config-details.component';\nimport { AuthenticationInterceptor } from 'src/interceptors/authentication.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    BuilderComponent,\n    HardwaresComponent,\n    NavbarComponent,\n    HwDetailsComponent,\n    MyconfigsComponent,\n    ConfigDetailsComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, ReactiveFormsModule],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { Category, HardwareModel } from 'src/app/models/hardware.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\n\n@Component({\n  selector: 'app-builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.scss'],\n})\nexport class BuilderComponent implements OnInit, OnDestroy {\n  configForm!: FormGroup;\n  sub!: Subscription;\n  sub2!: Subscription;\n  hardwares!: HardwareModel[];\n  categories!: string[];\n\n  newConfig: ConfigModel | any = {};\n  ckeys: any;\n  cvalues: any;\n\n  user!: UserModel | null;\n  userId!: string;\n\n  constructor(\n    private hwService: HardwareHttpService,\n    private configService: ConfigHttpService,\n    private categoryService: CategoryService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private auth: AuthService\n  ) {\n    this.auth.me().subscribe();\n    this.sub2 = this.activatedRoute.paramMap.subscribe({\n      next: (params) => {\n        this.userId = params.get('userId')!;\n      },\n    });\n  }\n\n  ngOnInit(): void {\n    this.configForm = new FormGroup({\n      case: new FormControl(''),\n      cpu: new FormControl(''),\n      gpu: new FormControl(''),\n      motherboard: new FormControl(''),\n      monitor: new FormControl(''),\n      psu: new FormControl(''),\n      ram: new FormControl(''),\n      storage: new FormControl(''),\n    });\n\n    this.getMe();\n    this.sub = this.auth.userObject.subscribe((user) => {\n      this.user = user;\n    });\n\n    this.categories = this.categoryService.categories;\n    this.hwService.findAll().subscribe((res) => {\n      this.hardwares = Object.values(res);\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n    this.sub2.unsubscribe();\n  }\n\n  create() {\n    const configLog = this.configForm.value;\n    this.configService.create(configLog).subscribe(() => {\n      this.router.navigate(['myconfigs', 'user', this.user?._id]);\n    });\n  }\n\n  addItemToMyList() {\n    const configLog = this.configForm.value;\n    this.configService.addItemToMyList(configLog, this.userId).subscribe({\n      next: (savedConfig: ConfigModel) => {\n        this.router.navigate(['configs', this.userId, 'myconfigs']);\n      },\n      error: (err) => console.error(err),\n    });\n  };\n\n  onChange($event: any, category: string) {\n    if (this.newConfig.hasOwnProperty(category)) {\n      this.newConfig[category] = $event.target.value as string;\n    }\n    this.newConfig[$event.target.name] = $event.target.value;\n\n    this.ckeys = Object.keys(this.newConfig);\n    this.cvalues = Object.values(this.newConfig);\n  };\n\n  getMe() {\n    if (localStorage.getItem('accessToken')) {\n      this.sub = this.auth.me().subscribe();\n    }\n  }\n}\n","<h2 class=\"text-center text-yellow mb-3\">PC Builder</h2>\n\n\n<div class=\"container d-grid\">\n  <div class=\"row justify-content-center\">\n    <div class=\"col-xs-12 col-md-12 col-lg-5\">\n      <div class=\"p-4 form-wrapper justify-content-center align-items-center\">\n\n        <form *ngIf=\"configForm\" [formGroup]=\"configForm\" (ngSubmit)=\"addItemToMyList()\" class=\" text-yellow opacity-75\">\n          <div class=\"mb-2 form-group-row\" *ngFor=\"let category of categories; index as i\">\n            <label [for]=\"category.toLowerCase()\" class=\"col-form-label me-2 d-block\">\n              {{category}}\n\n              <select class=\"form-control-sm form-select\" [id]=\"category.toLowerCase()\" [formControlName]=\"category.toLowerCase()\" [name]=\"category\"\n                (change)=\"onChange($event, category.toLowerCase())\">\n\n                <option [disabled]=\"true\" [selected]=\"true\" [hidden]=\"true\" [ngValue]=\"'default'\">\n                  Select a {{category}}\n                </option>\n\n                <ng-container *ngFor=\"let hardware of hardwares; index as j\">\n                  <option *ngIf=\"hardware.category === categories[i]\" [value]=\"hardware.name\">\n                    {{hardware.name}}\n                  </option>\n                </ng-container>\n              </select>\n\n            </label>\n          </div>\n          <button type=\"submit\" class=\"btn btn-outline-info d-block mx-auto\">Build a new PC</button>\n        </form>\n\n      </div>\n    </div>\n\n    <div class=\"p-5 col-lg-5 text-yellow\">\n      <h3 *ngIf=\"ckeys\" class=\"pb-5\">Added to Configuration:</h3>\n      <div *ngFor=\"let c of ckeys; index as i\">\n        <span class=\"fw-bold\">{{c}}: </span>\n        <span>\n          {{ cvalues[i] }}\n        </span>\n      </div>\n    </div>\n\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HwDetailsComponent } from './hw-details/hw-details.component';\nimport { HardwareModel } from '../../models/hardware.model';\nimport { Observable, Subscription } from 'rxjs';\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\n\n@Component({\n  selector: 'app-hardwares',\n  templateUrl: './hardwares.component.html',\n  styleUrls: ['./hardwares.component.scss'],\n})\nexport class HardwaresComponent implements OnInit, OnDestroy {\n  hardwares!: HardwareModel[];\n  selectedHwName?: string;\n  subscription!: Subscription;\n\n  showMoreInfo(hwName: string) {\n    this.selectedHwName = hwName;\n  }\n\n  get selectedHardware(): HardwareModel | void {\n    if (this.hardwares) {\n      return this.hardwares.find(\n        (hw: HardwareModel) => hw.name === this.selectedHwName\n        );\n      }\n  }\n\n  constructor(private http: HttpClient, private hwService: HardwareHttpService) {}\n\n  ngOnInit(): void {\n    this.subscription = this.hwService.findAll().subscribe({\n      next: (res) => {\n        this.hardwares = res;\n      },\n      error: err => console.log(err)\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<h2 class=\"text-center text-yellow my-5\">Hardwares</h2>\n\n<div class=\"d-flex container justify-content-center align-items-center p-0\">\n\n  <table class=\"table table-dark table-striped table-hover\">\n    <thead>\n      <tr>\n        <th class=\"pe-sm-0\" scope=\"col\">#</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Category</th>\n        <th scope=\"col\">More info</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr *ngFor=\"let hardware of hardwares; index as i\">\n        <th scope=\"row\">{{i+1}}.</th>\n        <td>{{hardware.name | titlecase}}</td>\n        <td>{{hardware.category}}</td>\n        <td>\n          <button (click)=\"showMoreInfo(hardware.name)\" class=\"btn btn-info\" type=\"button\" data-bs-toggle=\"modal\"\n            data-bs-target=\"#infoModal\" data-backdrop=\"false\">\n            More\n          </button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n</div>\n\n<app-hw-details [hardware]=\"selectedHardware\"></app-hw-details>","import { Component, OnInit, Input, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { HardwareModel } from '../../../models/hardware.model'\n\n@Component({\n  selector: 'app-hw-details',\n  templateUrl: './hw-details.component.html',\n  styleUrls: ['./hw-details.component.scss']\n})\nexport class HwDetailsComponent implements OnInit, OnChanges {\n\n  @Input() hardware!: HardwareModel | void;\n  keys!: string[];\n  values!: string[];\n  \n  constructor() { }\n  \n  ngOnInit(): void {\n  };\n  \n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.hardware){\n      this.keys = Object.keys(this.hardware).filter(key => key !== '_id');\n      this.values = Object.values(this.hardware).filter(value => value !== this.hardware?._id);\n    }\n  };\n\n}\n","<div class=\"container\">\n  <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\">\n    <div class=\"modal-dialog modal-dialog-centered modal-md\">\n      <div class=\"modal-content \">\n        <div class=\"modal-header\">\n          <h1 class=\"modal-title fs-5\" id=\"infoModalLabel\">{{hardware?.name}}</h1>\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n        </div>\n\n        <div class=\"modal-body py-1\">\n          <table *ngIf=\"hardware\" class=\"table table-dark table-striped\">\n            <tbody>\n              <tr *ngFor=\"let key of keys; index as i\">\n                <th>{{keys[i] | titlecase}}</th>\n                <td>{{values[i]}}</td>\n            </tbody>\n          </table>\n        </div>\n\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  userId?: string;\n  sub!: Subscription\n\n  constructor(private activatedRoute: ActivatedRoute, private auth: AuthService) {\n    this.auth.me().subscribe();\n    this.sub = this.activatedRoute.paramMap.subscribe({\n      next: (params) => {\n        this.userId = params.get('userId')!;\n      },\n    });\n   }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n}\n","<section class=\"hero-wrapper d-flex align-items-center justify-content-center mb-2\">\n  <div class=\"mx-5 text-center text-yellow text-center\">\n    <h1 class=\"title\">Let your dreams come true </h1>\n    <h6>Build your own unique desktop PC with us!</h6>\n  </div>\n</section>\n\n<section class=\"container mb-3\">\n  <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n\n          <img class=\"card-img-top\" src=\"https://images.unsplash.com/photo-1627281795187-9605af7235b0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1330&q=80\" class=\"card-img-top\" alt=\"...\">\n\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Browse hardwares</h5>\n          <p class=\"card-text\">Select from our collection of the best desktop computer components!</p>\n          <a routerLink=\"/hardwares\" class=\"btn btn-dark\">Hardwares</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n        <div class=\"img-wrapper\">\n          <img src=\"https://images.unsplash.com/photo-1678642851519-15d224598d68?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1880&q=80\" class=\"card-img-top\" alt=\"...\">\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Build your PC</h5>\n          <p class=\"card-text\">There are endless variations for building a strong, unique desktop PC based on your needs.</p>\n        </div>\n        <div class=\"card-footer p-0\">\n          <a [routerLink]=\"userId !== null ? [userId, '/builder'] : ['login']\" class=\"btn btn-dark\">Build a PC</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n        <div class=\"img-wrapper\">\n          <img src=\"https://images.unsplash.com/photo-1623243747526-d1a0413e45c6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1168&q=80\" class=\"card-img-top\" alt=\"...\">\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Stay the best</h5>\n          <p class=\"card-text\">If you sign up, you can save multiple builds and come back to compare them anytime.</p>\n          <a routerLink=\"/login\" class=\"btn btn-dark\">Login</a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  loginForm!: FormGroup;\n  users!: UserModel[];\n  sub!: Subscription;\n  emailNotFound: boolean = false;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private userService: UserHttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        this.emailNotFoundValidator(),\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4),\n      ]),\n    });\n\n    this.sub = this.userService.findAll().subscribe({\n      next: (res) => {\n        this.users = res;\n      },\n      error: (err) => console.log(err),\n    });\n  }\n\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  onSubmit() {\n    const userLog = this.loginForm.value;\n    if (!this.users.map((user) => user.email).includes(userLog.email)) {\n      alert('Account with this email not found');\n      this.loginForm.reset();\n    } else {\n      this.auth.login(userLog).subscribe({\n        next: (user) => {\n          this.router.navigate(['']);\n        },\n      });\n    }\n  }\n\n  emailNotFoundValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      let isInDb = this.users?.map((user) => user.email).includes(email);\n      if (!isInDb) {\n        this.emailNotFound = true;\n        return { emailNotFound: { value: control.value } };\n      } else {\n        this.emailNotFound = false;\n        return null;\n      }\n    };\n  }\n}\n","<div class=\"form-wrapper d-flex container justify-content-center align-items-center\">\n  \n  <form *ngIf=\"loginForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\"\n  class=\"p-5 text-yellow opacity-75\"\n  >\n  <h3 class=\"text-yellow text-center mb-5\">Login</h3>\n\n    <div *ngIf=\"email\" class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n      <div *ngIf=\"email.invalid && email.touched && email.errors\n      && !email.errors['emailNotFoundValidator']\" \n      class=\"text-danger fw-bold\">\n        A valid email is required.\n      </div>\n      <div *ngIf=\"email.touched && email.dirty && emailNotFound \n      && email.errors !== null\"\n      class=\"text-danger fw-bold\">\n        This email is not registered.\n      </div>\n      \n    </div>\n    <div *ngIf=\"password\" class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n      <div *ngIf=\"password.invalid && password.touched\" class=\"text-danger fw-bold\">A valid password is required.</div>\n    </div>\n    \n    <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-outline-warning\">\n      Login\n    </button>\n\n    <div class=\"pt-5\">\n      Don't have an account? <span class=\"fw-bold\"><a routerLink=\"/signup\">Sign up now!</a></span>\n    </div>\n\n  </form>\n\n</div>","import {\n  Component,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { Category, HardwareModel } from 'src/app/models/hardware.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-config-details',\n  templateUrl: './config-details.component.html',\n  styleUrls: ['./config-details.component.scss'],\n})\nexport class ConfigDetailsComponent implements OnInit, OnDestroy {\n  userId!: string | null;\n  configId!: string | null;\n  currentConfig!: ConfigModel;\n\n  detailsForm!: FormGroup;\n  categories!: string[];\n  hardwares!: HardwareModel[];\n\n  sub1?: Subscription;\n  sub2?: Subscription;\n  sub3?: Subscription;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private categoryService: CategoryService,\n    private hwService: HardwareHttpService,\n    private configService: ConfigHttpService,\n    private userService: UserHttpService,\n    private auth: AuthService\n  ) {\n    this.auth.me().subscribe();\n    this.configId = this.activatedRoute.snapshot.paramMap.get('configId');\n    this.userId = this.activatedRoute.snapshot.paramMap.get('userId');\n  }\n\n  ngOnInit(): void {\n    this.detailsForm = new FormGroup({\n      case: new FormControl(''),\n      cpu: new FormControl(''),\n      gpu: new FormControl(''),\n      motherboard: new FormControl(''),\n      monitor: new FormControl(''),\n      psu: new FormControl(''),\n      ram: new FormControl(''),\n      storage: new FormControl(''),\n    });\n\n    this.currentConfig = this.detailsForm.value;\n    this.categories = this.categoryService.categories;\n    this.sub1 = this.hwService.findAll().subscribe((res) => {\n      this.hardwares = res;\n    });\n\n    if (this.userId && this.configId) {\n      this.sub2 = this.configService\n        .getMyItem(this.userId, this.configId)\n        .subscribe({\n          next: (config: ConfigModel) => {\n            this.currentConfig = config;\n            this.detailsForm.patchValue(this.currentConfig);\n          },\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.sub1?.unsubscribe();\n    this.sub2?.unsubscribe();\n    this.sub3?.unsubscribe();\n  }\n\n  updateMyConfig(userId: string, configId: string, config: ConfigModel) {\n    if (userId && configId) {\n      this.sub3 = this.configService\n        .updateMyItem(userId, configId, config)\n        .subscribe({\n          next: () => {\n            this.currentConfig = this.detailsForm.value;\n          },\n        });\n      this.router.navigate(['configs', this.userId, 'myconfigs']);\n    }\n  }\n\n  deleteMyConfig(userId: string, configId: string) {\n    if (userId) {\n      if (configId && confirm('Are you sure you want to delete your config?')) {\n        this.sub3 = this.configService\n          .deleteMyItem(userId, configId)\n          .subscribe();\n      }\n      this.router.navigate(['configs', this.userId, 'myconfigs']);\n    }\n  }\n}\n","<div class=\"container d-grid\">\n  <h2>Update config {{currentConfig._id}}</h2>\n\n    <div class=\"row justify-content-center\">\n      <div class=\"col-12\">\n        <div class=\"p-4 form-wrapper justify-content-center align-items-center\">\n          <form *ngIf=\"detailsForm && userId && configId\" [formGroup]=\"detailsForm\"\n            (ngSubmit)=\"updateMyConfig(userId, configId, detailsForm.value)\" class=\" text-yellow opacity-75\">\n\n            <div class=\"mb-2 form-group-row\" *ngFor=\"let category of categories; index as i\">\n\n              <label [for]=\"category.toLowerCase()\" class=\"col-form-label me-2 d-block\">\n                {{category}}\n                <select class=\"form-control-sm form-select\" [id]=\"category.toLowerCase()\"\n                  [formControlName]=\"category.toLowerCase()\" [name]=\"category\" [value]=\"category\">\n                  <option [value]=\"category | titlecase\" [disabled]=\"true\" [selected]=\"true\" [hidden]=\"true\">\n                    Select a {{category}}\n                  </option>\n\n                  <ng-container *ngFor=\"let hardware of hardwares; index as j\">\n                    <option *ngIf=\"hardware.category === categories[i]\" [value]=\"hardware.name\">\n                      {{hardware.name}}\n                    </option>\n                  </ng-container>\n\n                </select>\n              </label>\n\n            </div>\n\n            <button type=\"submit\" class=\"btn btn-outline-info\">Update</button>\n            <button type=\"button\" *ngIf=\"userId && configId\" (click)=\"deleteMyConfig(userId, configId)\"\n              class=\"btn btn-outline-danger ms-2\">\n              Delete\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-myconfigs',\n  templateUrl: './myconfigs.component.html',\n  styleUrls: ['./myconfigs.component.scss'],\n})\nexport class MyconfigsComponent implements OnInit {\n  configs!: ConfigModel[];\n  user!: UserModel | null;\n  userId!: string;\n\n  constructor(\n    private configService: ConfigHttpService,\n    private auth: AuthService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.auth.me().subscribe();\n    this.activatedRoute.paramMap.subscribe({\n      next: (params) => {\n        this.userId = params.get('userId')!;\n      },\n    });\n  };\n\n  ngOnInit(): void {\n    this.auth.userObject.subscribe((user) => {\n      this.user = user;\n    });\n    this.configService.getMyList(this.userId).subscribe((res) => {\n      this.configs = res;\n    });\n  };\n\n}\n","<div *ngIf=\"configs\" class=\"container\">\n  <div class=\"row row-cols-md-3 row-cols-lg-4 grid gap-3 justify-content-evenly\">\n\n      <div *ngFor=\"let config of configs; index as i\" class=\"card shadow\">\n        <div class=\"card-header\">\n          <img src=\"https://source.unsplash.com/random/800x600/?gaming+computer {{ [i] }}\" class=\"card-img-top\" alt=\"computer\">\n          <a [routerLink]=\"[config._id]\" class=\"btn btn-warning shadow\">Update</a>\n        </div>\n          <div class=\"card-body mx-auto\">\n              <ul class=\"mx-0 px-0\">\n                <li>Config ID: <small>{{ config._id }}</small></li>\n                <li title=\"Case\">{{ config.case }}</li>\n                <li title=\"CPU\">{{ config.cpu }}</li>\n                <li title=\"GPU\">{{ config.gpu }}</li>\n                <li title=\"Motherboard\">{{ config.motherboard }}</li>\n                <li title=\"Monitor\">{{ config.monitor }}</li>\n                <li title=\"PSU\">{{ config.psu }}</li>\n                <li title=\"RAM\">{{ config.ram }}</li>\n                <li title=\"Storage\">{{ config.storage }}</li>\n              </ul>\n        </div>\n      </div>\n\n  </div>\n</div>","import { Component, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription, tap } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit, OnDestroy, OnChanges {\n  user!: UserModel | null;\n  sub!: Subscription;\n  sub2!: Subscription;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.getMe();\n    this.sub2 = this.authService.userObject.subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.getMe();\n    this.sub2 = this.authService.userObject.subscribe((user) => {\n      this.user = user;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n    if (this.sub2) {\n      this.sub2.unsubscribe();\n    }\n  }\n\n  getMe() {\n    if (localStorage.getItem('accessToken')) {\n      this.sub = this.authService.me().subscribe();\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n    this.user = null;\n    this.authService.userObject.next(null);\n    this.router.navigate(['']);\n  }\n}\n","<nav class=\"navbar navbar-light navbar-expand-sm bg-body-tertiary\">\n  <div class=\"container-fluid \">\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link active text-yellow\" aria-current=\"page\" routerLink=\"/\">myConfix</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" routerLink=\"/hardwares\">Hardwares</a>\n        </li>\n        <li *ngIf=\"user\" class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" [routerLink]=\"[user._id?.toString(), 'builder']\">Builder</a>\n        </li>\n        <li *ngIf=\"user\" class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" [routerLink]=\"['/configs', user._id?.toString(), 'myconfigs']\">My configs</a>\n        </li>\n      </ul>\n    </div>\n    \n    <div *ngIf=\"!user\" class=\"nav-item float-end\">\n      <a class=\"nav-link text-yellow\" routerLink=\"/login\">Login</a>\n    </div>\n    <div *ngIf=\"user && user !== null\">\n      <a class=\"nav-link d-inline\" *ngIf=\"user && user.email\">{{user.email}}</a>\n      <a class=\"nav-link text-yellow\" *ngIf=\"user\" (click)=\"logout()\" routerLink=\"/\">Logout</a>\n    </div>\n\n\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm!: FormGroup;\n  users!: UserModel[];\n  sub!: Subscription;\n  emailInUse: boolean = false;\n\n  constructor(\n    private router: Router, \n    private userService: UserHttpService,\n    private auth: AuthService\n    ) { }\n\n  ngOnInit(): void {\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n        this.emailInUseValidator()\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(4)\n      ]),\n      rules: new FormControl(false, [\n        Validators.requiredTrue\n      ])\n    });\n\n    this.sub = this.userService.findAll().subscribe({\n      next: (res) => {\n        this.users = res;\n      },\n      error: err => console.log(err)\n    });\n  }\n\n  get email() { return this.signupForm.get('email')};\n  get password() { return this.signupForm.get('password')};\n  get rules() { return this.signupForm.get('rules')};\n\n  onSubmit(){\n    const userLog = this.signupForm.value;\n    if(this.users.map(user => user.email).includes(userLog.email)){\n      alert('This email has been already registered');\n      this.signupForm.reset();\n    } else {\n      this.userService.create(userLog).subscribe({\n        next: (user) => {\n          this.router.navigate(['login'])\n        }\n      });\n    }\n  };\n\n  emailInUseValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      let isInUse = this.users?.map(user => user.email).includes(email);\n      if(isInUse){\n        this.emailInUse = true;\n        return {emailInUse: {value: control.value}};\n      }\n      this.emailInUse = false;\n      return null;\n    }\n  }\n\n}\n","<div class=\"form-wrapper d-flex container justify-content-center align-items-center\">\n\n  <form *ngIf=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" class=\"p-5 text-yellow opacity-75\">\n    <h3 class=\"text-yellow text-center mb-5\">Sign up</h3>\n\n    <div *ngIf=\"email\" class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n      <div *ngIf=\"email.invalid && email.touched && email.errors && !emailInUse\" class=\"text-danger fw-bold\">\n        A valid email is required.\n      </div>\n      <div *ngIf=\"email.invalid && email.touched && email.errors && emailInUse\" class=\"text-danger fw-bold\">\n        Email is already in use.\n      </div>\n    </div>\n\n    <div *ngIf=\"password\" class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n      <div *ngIf=\"password.invalid && password.touched\" class=\"text-danger fw-bold\">A valid password is required.</div>\n    </div>\n\n    <div *ngIf=\"rules\" class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"rules\" formControlName=\"rules\">\n      <label class=\"form-check-label\" for=\"rules\">I accept the rules</label>\n      <div *ngIf=\"(email?.valid && password?.valid && rules.invalid) || rules.invalid && rules.touched\"\n        class=\"text-warning fw-bold\">You must accept the rules.</div>\n    </div>\n\n    <button [disabled]=\"signupForm.invalid\" type=\"submit\" class=\"btn btn-outline-warning\">\n      Sign Up\n    </button>\n\n  </form>\n\n</div>","export const categories = ['Case', 'CPU', 'GPU', 'Motherboard', 'Monitor', 'PSU', 'RAM', 'Storage'] as const;\r\nexport type Category = typeof categories[number];\r\n\r\nexport interface HardwareModel {\r\n    _id?: string;\r\n    name: string;\r\n    category: Category;\r\n    price_usd: number | null;\r\n\r\n    type?: string;\r\n    side_panel_window?: string;\r\n    internal_3_5_bays?: string | number;\r\n\r\n    core_count?: string | number;\r\n    core_clock?: string;\r\n    boost_clock?: string;\r\n    tdp?: string | number;\r\n    integrated_graphics?: string | null;\r\n\r\n    chipset?: string;\r\n\r\n    cpu_socket?: string;\r\n    form_factor?: string;\r\n    memory_max?: string;\r\n    memory_slots?: number;\r\n\r\n    resolution?: string;\r\n    refresh_rate?: string;\r\n\r\n    efficiency_rating?: string;\r\n    wattage?: string;\r\n    modular?: string;\r\n\r\n    speed?: string;\r\n    modules?: string;\r\n\r\n    capacity?: string;\r\n    interface?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { UserModel } from '../models/user.model';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface userLogModel {\n  accessToken: string;\n  refreshToken?: string;\n  user: UserModel\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  BASE_URL = environment.apiUrl;\n\n  private _userObject = new BehaviorSubject<UserModel | null>(null);\n  \n  constructor(private http: HttpClient) { }\n\n  login(userLog: any): Observable<userLogModel> {\n    return this.http.post<userLogModel>(`${this.BASE_URL}login`, userLog).pipe(\n      tap(loginData => {\n        if(loginData.accessToken && loginData.refreshToken){\n          localStorage.setItem('accessToken', loginData.accessToken);\n          localStorage.setItem('refreshToken', loginData.refreshToken);\n        }\n        this._userObject.next(loginData.user)\n      })\n    )\n  };\n\n  refresh(): Observable<{accessToken: string}>{\n\n    const refreshToken = localStorage.getItem('refreshToken');\n    return this.http.post<{accessToken: string}>(`${this.BASE_URL}refresh`, {refreshToken}).pipe(\n      tap(data => {\n        if(data && data.accessToken){\n          localStorage.setItem('accessToken', data.accessToken)\n        };\n      }));\n  };\n\n  logout(){\n    const refreshToken = localStorage.getItem('refreshToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('accessToken');\n    return this.http.post(`${this.BASE_URL}logout`, {refreshToken}).pipe(\n      tap(() => {\n        this._userObject.next(null);\n      })\n    )\n  }\n\n\n  get userObject(): BehaviorSubject<UserModel | null>{\n    return this._userObject;\n  };\n\n  me(): Observable<{user: UserModel}>{\n    return this.http.get<{user: UserModel}>(`${this.BASE_URL}me`).pipe(\n      tap(user => {\n        this._userObject.next(user.user);\n      })\n    )\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Category } from '../models/hardware.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  categories: string[] | Category[] = ['Case', 'CPU', 'GPU', 'Motherboard', 'Monitor', 'PSU', 'RAM', 'Storage'];\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, map } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router){}\n  \n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\n\n    return this.authService.me().pipe(\n      map((user) => {\n        if (user.user) {\n          return true;\n        }\n        else {\n          alert('You have to sign in!');\n          this.router.navigate(['login']);\n          return false;\n        }\n      })\n    );\n    \n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseHttpService<T> {\n\n  BASE_URL = environment.apiUrl;\n\n  constructor(private http: HttpClient, entity: String) {\n    this.BASE_URL += entity;\n  }\n\n  create(entityObj: T): Observable<T> {\n    return this.http.post<T>(`${this.BASE_URL}`, entityObj);\n  };\n\n  findAll(): Observable<T[]> {\n    return this.http.get<T[]>(`${this.BASE_URL}`);\n  };\n\n  findById(id: any): Observable<T> {\n    return this.http.get<T>(`${this.BASE_URL}/${id}`);\n  };\n\n  update(id: any, entityObj: T): Observable<T> {\n    return this.http.put<T>(`${this.BASE_URL}/${id}`, entityObj);\n  };\n\n  delete(id: any): Observable<any>{\n    return this.http.delete(`${this.BASE_URL}/${id}`)\n  };\n\n\n\n  addItemToMyList(entityObj: T, userId: string): Observable<T>{\n    return this.http.post<T>(`${this.BASE_URL}/${userId}/myconfigs`, entityObj)\n  };\n\n  getMyList(userId: string): Observable<T[]>{\n    return this.http.get<T[]>(`${this.BASE_URL}/${userId}/myconfigs`)\n  };\n\n  getMyItem(userId: string, itemId: string): Observable<T>{\n    return this.http.get<T>(`${this.BASE_URL}/${userId}/myconfigs/${itemId}`)\n  };\n\n  updateMyItem(userId: string, itemId: string, entityObj: T): Observable<T>{\n    return this.http.put<T>(`${this.BASE_URL}/${userId}/myconfigs/${itemId}`, entityObj)\n  };\n\n  deleteMyItem(userId: string, itemId: string): Observable<any>{\n    return this.http.delete(`${this.BASE_URL}/${userId}/myconfigs/${itemId}`)\n  };\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigModel } from 'src/app/models/config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigHttpService extends BaseHttpService<ConfigModel> {\n\n  constructor(http: HttpClient) {\n    super(http, 'configs')\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { HardwareModel } from 'src/app/models/hardware.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardwareHttpService extends BaseHttpService<HardwareModel> {\n\n  constructor(http: HttpClient) {\n    super(http, 'hardwares')\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { UserModel } from 'src/app/models/user.model';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserHttpService extends BaseHttpService<UserModel> {\n\n  constructor(http: HttpClient) {\n    super(http, 'users');\n  }\n}\n","export const environment = {\n  production: false,\n\n  apiUrl: '/api/'\n};\n\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './../app/services/auth.service';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { catchError, Observable, switchMap, throwError } from 'rxjs';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n  constructor(private authService: AuthService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('accessToken');\n    let request = req;\n\n    if (token) {\n      request = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`),\n      });\n    }\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err.status === 401) {\n          return throwError(() => new Error('Bejelentkezés szükséges'));\n        } else if (err.status === 403) {\n          return this.handle403Error(request, next);\n        } else {\n          return throwError(() => new Error('Oops, something happened'));\n        }\n      })\n    );\n  }\n\n  handle403Error(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    return this.authService.refresh().pipe(\n      switchMap((tokenData) => {\n        const newRequest = req.clone({\n          headers: req.headers.set(\n            'Authorization',\n            `Bearer ${tokenData.accessToken}`\n          ),\n        });\n        return next.handle(newRequest);\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}