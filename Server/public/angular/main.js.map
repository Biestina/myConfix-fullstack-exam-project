{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/admin/hardwares/hardwares.component.ts","./src/app/components/admin/hardwares/hardwares.component.html","./src/app/components/admin/hardwares/hw-details/hw-details.component.ts","./src/app/components/admin/hardwares/hw-details/hw-details.component.html","./src/app/components/builder/builder.component.ts","./src/app/components/builder/builder.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/myconfigs/config-details/config-details.component.ts","./src/app/components/myconfigs/config-details/config-details.component.html","./src/app/components/myconfigs/myconfigs.component.ts","./src/app/components/myconfigs/myconfigs.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/users/users.component.ts","./src/app/components/users/users.component.html","./src/app/models/hardware.model.ts","./src/app/services/auth.service.ts","./src/app/services/category.service.ts","./src/app/services/guard/auth.guard.ts","./src/app/services/http/base-http.service.ts","./src/app/services/http/config-http.service.ts","./src/app/services/http/hardware-http.service.ts","./src/app/services/http/user-http.service.ts","./src/environments/environment.ts","./src/interceptors/authentication.interceptor.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HardwaresComponent } from './components/admin/hardwares/hardwares.component';\nimport { BuilderComponent } from './components/builder/builder.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { MyconfigsComponent } from './components/myconfigs/myconfigs.component';\nimport { AuthGuard } from './services/guard/auth.guard';\nimport { ConfigDetailsComponent } from './components/myconfigs/config-details/config-details.component';\nimport { UsersComponent } from './components/users/users.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'hardwares', component: HardwaresComponent },\n  { path: 'builder', component: BuilderComponent },\n  { \n    path: 'myconfigs', \n    component: MyconfigsComponent,\n    canActivate: [AuthGuard]\n  },\n  { \n    path: 'myconfigs/:id', \n    component: ConfigDetailsComponent,\n    canActivate: [AuthGuard]\n  },\n  { \n    path: 'users', \n    component: UsersComponent,\n    // canActivate: [AuthGuard]\n  },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular';\n}\n","<header class=\"mb-5 pb-5\">\n  <app-navbar></app-navbar>\n  <!-- <div class=\"mb-5\"></div> -->\n</header>\n\n<router-outlet></router-outlet>\n\n<footer></footer>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { BuilderComponent } from './components/builder/builder.component';\nimport { HardwaresComponent } from './components/admin/hardwares/hardwares.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HwDetailsComponent } from './components/admin/hardwares/hw-details/hw-details.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MyconfigsComponent } from './components/myconfigs/myconfigs.component';\nimport { ConfigDetailsComponent } from './components/myconfigs/config-details/config-details.component';\nimport { AuthenticationInterceptor } from 'src/interceptors/authentication.interceptor';\nimport { UsersComponent } from './components/users/users.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    BuilderComponent,\n    HardwaresComponent,\n    NavbarComponent,\n    HwDetailsComponent,\n    MyconfigsComponent,\n    ConfigDetailsComponent,\n    UsersComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, ReactiveFormsModule],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { HwDetailsComponent } from './hw-details/hw-details.component';\r\nimport { HardwareModel } from '../../../models/hardware.model';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\r\n\r\n@Component({\r\n  selector: 'app-hardwares',\r\n  templateUrl: './hardwares.component.html',\r\n  styleUrls: ['./hardwares.component.scss'],\r\n})\r\nexport class HardwaresComponent implements OnInit, OnDestroy {\r\n  hardwares!: HardwareModel[];\r\n  selectedHwName?: string;\r\n  subscription!: Subscription;\r\n  // @ViewChild(HwDetailsComponent) hwDetailsComponent!: HwDetailsComponent;\r\n  // @ViewChild('infoModal', { static: false }) infoModal!: ElementRef;\r\n\r\n  showMoreInfo(hwName: string) {\r\n    this.selectedHwName = hwName;\r\n    // this.hwDetailsComponent.show();\r\n    // this.hwDetailsComponent.ngOnInit\r\n    // this.hwDetailsComponent['show']();\r\n  }\r\n\r\n  get selectedHardware(): HardwareModel | void {\r\n    if (this.hardwares) {\r\n      return this.hardwares.find(\r\n        (hw: HardwareModel) => hw.name === this.selectedHwName\r\n      );\r\n    }\r\n  }\r\n\r\n  constructor(private http: HttpClient, private hwService: HardwareHttpService) {}\r\n\r\n  ngOnInit(): void {\r\n    // const url: string = '../../../../assets/data.json';\r\n    // const getHardwares: Observable<Object> = this.http.get(url);\r\n    // this.subscription = getHardwares.subscribe(res => {\r\n    //     this.hardwares = Object.values(res);\r\n    // })\r\n    this.subscription = this.hwService.findAll().subscribe({\r\n      next: (res) => {\r\n        this.hardwares = res;\r\n      },\r\n      error: err => console.log(err)\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","<h2 class=\"text-center text-yellow my-5\">Hardwares</h2>\r\n\r\n<div class=\"d-flex container justify-content-center align-items-center\">\r\n\r\n  <table class=\"table table-dark table-striped table-hover\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Name</th>\r\n        <th scope=\"col\">Category</th>\r\n        <th scope=\"col\">More info</th>\r\n        <!-- <th scope=\"col\">Actions</th> -->\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      <tr #eachHardware *ngFor=\"let hardware of hardwares; index as i\">\r\n        <th scope=\"row\">{{i+1}}.</th>\r\n        <td>{{hardware.name}}</td>\r\n        <td>{{hardware.category}}</td>\r\n        <td>\r\n          <button (click)=\"showMoreInfo(hardware.name)\" class=\"btn btn-info\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#infoModal\" data-backdrop=\"false\"\r\n          >\r\n            More\r\n          </button>\r\n        </td>\r\n        <!-- <td>\r\n          <div class=\"btn-group\">\r\n            <button class=\"btn btn-warning\">Up</button>\r\n            <button class=\"btn btn-danger\">Del</button>\r\n          </div>\r\n        </td> -->\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n\r\n\r\n<!-- * modal -->\r\n<!-- <ng-container #infoModal *ngIf=\"selectedHardware\">\r\n  <app-hw-details [hardware]=\"selectedHardware\"></app-hw-details>\r\n</ng-container> -->\r\n\r\n<!-- <ng-container #infoModal *ngIf=\"selectedHardware\"> -->\r\n    <app-hw-details  [hardware]=\"selectedHardware\" ></app-hw-details>\r\n<!-- </ng-container> -->\r\n\r\n  <!-- <app-hw-details *ngIf=\"selectedHardware\" [hardware]=\"selectedHardware\" [data]=\"data\"></app-hw-details> -->\r\n  <!-- <ng-template *ngIf=\"selectedHardware\">\r\n    <app-hw-details *ngIf=\"modalOpen$ | async\"  [hardware]=\"selectedHardware\"></app-hw-details>\r\n  </ng-template> -->\r\n\r\n\r\n<!-- <ng-container #infoModal *ngIf=\"selectedHardware\">\r\n  <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered modal-sm\">\r\n      <div class=\"modal-content \">\r\n        <div class=\"modal-header\">\r\n          <h1 class=\"modal-title fs-5\" id=\"infoModalLabel\">{{selectedHwName}}</h1>\r\n          <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n\r\n        <app-hw-details [hardware]=\"selectedHardware\"></app-hw-details>\r\n\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n          <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-container> -->","import { Component, OnInit, Input, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { HardwareModel } from '../../../../models/hardware.model'\r\n\r\n@Component({\r\n  selector: 'app-hw-details',\r\n  templateUrl: './hw-details.component.html',\r\n  styleUrls: ['./hw-details.component.scss']\r\n})\r\nexport class HwDetailsComponent implements OnInit, OnChanges {\r\n\r\n  @Input() hardware?: HardwareModel | void;\r\n  // @Input() data: any;\r\n  keys!: string[];\r\n  values!: string[];\r\n  \r\n  constructor() { }\r\n  \r\n  ngOnInit(): void {\r\n    if(this.hardware){\r\n      this.keys = Object.keys(this.hardware);\r\n      this.values = Object.values(this.hardware);\r\n    }\r\n  };\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if(this.hardware){\r\n\r\n      this.keys = Object.keys(this.hardware);\r\n      this.values = Object.values(this.hardware);\r\n    }\r\n    // console.log(this.hardware);\r\n  };\r\n\r\n}\r\n","<!-- <div class=\"modal-body\">\r\n<table *ngIf=\"hardware\" class=\"table table-dark table-striped\">\r\n\r\n  <thead>\r\n  </thead>\r\n  \r\n  <tbody>\r\n    <tr *ngFor=\"let key of keys; index as i\">\r\n      <th>{{keys[i] | titlecase}}</th>\r\n      <td>{{values[i]}}</td>\r\n  </tbody>\r\n</table>\r\n</div> -->\r\n\r\n\r\n<!-- <ng-container #infoModal *ngIf=\"hardware\"> -->\r\n<div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-md\">\r\n    <div class=\"modal-content \">\r\n      <div class=\"modal-header\">\r\n        <h1 class=\"modal-title fs-5\" id=\"infoModalLabel\">{{hardware?.name}}</h1>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n        <table *ngIf=\"hardware\" class=\"table table-dark table-striped\">\r\n\r\n          <thead>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr *ngFor=\"let key of keys; index as i\">\r\n              <th>{{keys[i] | titlecase}}</th>\r\n              <td>{{values[i]}}</td>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <!-- <button type=\"button\" class=\"btn btn-primary\">Save changes</button> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- </ng-container> -->\r\n<!-- *********** -->\r\n\r\n<!-- <div class=\"modal fade\" id=\"infoModal\" tabindex=\"-1\" aria-labelledby=\"infoModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-dialog-centered modal-sm\">\r\n    <div class=\"modal-content \">\r\n      <div class=\"modal-header\">\r\n        <h1 class=\"modal-title fs-5\" id=\"infoModalLabel\">{{hardware.name}}</h1>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        \r\n        <table *ngIf=\"hardware\" class=\"table table-dark table-striped\">\r\n\r\n          <thead>\r\n          </thead>\r\n          \r\n          <tbody>\r\n            <tr *ngFor=\"let key of keys; index as i\">\r\n              <th>{{keys[i] | titlecase}}</th>\r\n              <td>{{values[i]}}</td>\r\n          </tbody>\r\n        </table>\r\n          \r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> -->","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { Category, HardwareModel } from 'src/app/models/hardware.model';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\n\n@Component({\n  selector: 'app-builder',\n  templateUrl: './builder.component.html',\n  styleUrls: ['./builder.component.scss'],\n})\nexport class BuilderComponent implements OnInit, OnDestroy {\n  configForm!: FormGroup;\n  sub?: Subscription;\n  hardwares!: HardwareModel[];\n  user!: UserModel | null;\n\n  categories!: string[];\n  myCategories!: Category[];\n\n  newConfig: ConfigModel | any = {};\n  ckeys: any;\n  cvalues: any;\n\n  constructor(\n    // private hwService: HardwareService,\n    // private configService: ConfigService, próba subclass\n    private hwService: HardwareHttpService,\n    private configService: ConfigHttpService,\n    private categoryService: CategoryService,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.configForm = new FormGroup({\n      case: new FormControl(),\n      cpu: new FormControl(''),\n      gpu: new FormControl(''),\n      motherboard: new FormControl(''),\n      monitor: new FormControl(''),\n      psu: new FormControl(''),\n      ram: new FormControl(''),\n      storage: new FormControl(''),\n    });\n\n    this.sub = this.authService.userObject.subscribe((user) => {\n      this.user = user;\n    });\n\n    this.categories = this.categoryService.categories;\n\n    // this.subscription = this.hwService.getHardwares().subscribe((res) => {\n    this.hwService.findAll().subscribe((res) => {\n      this.hardwares = Object.values(res);\n      // console.log(this.hardwares);\n    });\n\n    // console.log(this.configService.findCat().subscribe((res) => {\n    //   this.myCategories = Object.values(res);\n    //   // console.log(Object.keys(res[0]));\n    // }))\n  }\n\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n  }\n\n  //* előző commit\n  // create(){\n  //   const configLog = this.configForm.value;\n  //   // this.configService.create(this.newConfig).subscribe({\n  //   this.configService.create(configLog).subscribe({\n  //     next: (savedConfig: ConfigModel) => {\n  //       console.log('new config created');\n  //       this.router.navigate(['myconfigs'])\n  //     },\n  //     error: (err) => console.log(err)\n  //   })\n  // };\n  create() {\n    const configLog = {\n      ...this.configForm.value\n      // related_user: this.user?._id,       //*létrejön a konfig, de hiba(gondolom az id bekavar)\n    };\n    // this.configService.create(this.newConfig).subscribe({\n    this.configService.create(configLog).subscribe(\n      // next:\n      () => {\n        console.log('new config created');\n        this.router.navigate(['myconfigs']);\n      }\n    );\n    // error: (err) => console.log(err)\n  }\n\n  onChange($event: any, category: string) {\n    // console.log($event.target.name);\n    // console.log($event.target.value);\n    if (this.newConfig.hasOwnProperty(category)) {\n      this.newConfig[category] = $event.target.value as string;\n    }\n    this.newConfig[$event.target.name] = $event.target.value;\n    // console.log(this.newConfig);\n\n    this.ckeys = Object.keys(this.newConfig);\n    this.cvalues = Object.values(this.newConfig);\n    // console.log(this.cvalues);\n  }\n\n  // filtered(category: string): HardwareModel[] {\n  //     return this.hardwares.filter(hw => hw.category === category.toLowerCase)\n  // }\n}\n","<h2 class=\"text-center text-yellow mb-3\">PC Builder</h2>\n\n\n<div class=\"container d-grid\">\n  <div class=\"row\">\n    <div class=\"col\">\n\n      <!-- <div class=\"form-wrapper d-grid container justify-content-center align-items-center bg-dark w-25 bg-opacity-50\"> -->\n      <div class=\"p-4 form-wrapper  justify-content-center align-items-center\">\n        <form *ngIf=\"configForm\" [formGroup]=\"configForm\" (ngSubmit)=\"create()\" class=\" text-yellow opacity-75\">\n\n          <div class=\"mb-2 form-group-row\" *ngFor=\"let category of categories; index as i\">\n\n            <label [for]=\"category.toLowerCase()\" class=\"col-form-label me-2\">\n              {{category}}\n              <select class=\"form-control-sm form-select\" [id]=\"category.toLowerCase()\" [formControlName]=\"category.toLowerCase()\" [name]=\"category\" [value]=\"category\"\n                (change)=\"onChange($event, category.toLowerCase())\">\n                <option [disabled]=\"true\" [selected]=\"true\" [hidden]=\"true\" [defaultSelected]=\"true\">\n                  Select a {{category}}\n                </option>\n\n                <ng-container *ngFor=\"let hardware of hardwares; index as j\">\n                  <option *ngIf=\"hardware.category === categories[i]\" [value]=\"hardware.name\">\n                    {{hardware.name}}\n                  </option>\n                </ng-container>\n\n              </select>\n            </label>\n            <!-- <button class=\"btn btn-success\">+</button> -->\n          </div>\n          <!-- <label>\n            Memória:\n            <select [(ngModel)]=\"selectedMemory\">\n              <option *ngFor=\"let memory of memories\" [value]=\"memory.id\">{{ memory.name }}</option>\n            </select>\n          </label> -->\n\n\n          <!-- <button type=\"button\" (click)=\"addToConfig()\">Add to Configuration</button> -->\n\n          <button class=\"btn btn-outline-info d-block mx-auto\">Build a new PC</button>\n        </form>\n      </div>\n\n    </div>\n\n\n\n    <div class=\"p-5 col text-yellow\">\n      <h3 *ngIf=\"ckeys\" class=\"pb-5\">Added to Configuration:</h3>\n      <div *ngFor=\"let c of ckeys; index as i\">\n        <span class=\"fw-bold\">{{c}}: </span>\n        <span>\n          {{ cvalues[i] }}\n        </span>\n      </div>\n    </div>\n\n\n  </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"hero-wrapper d-flex align-items-center justify-content-center mb-2\">\n  <div class=\"mx-5 text-center text-yellow text-center\">\n    <h1 class=\"title\">Let your dreams come true </h1>\n    <h6>Build your own unique desktop PC with us!</h6>\n  </div>\n</section>\n\n<section class=\"container mb-3\">\n  <div class=\"row row-cols-1 row-cols-md-3 g-4\">\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n\n          <img class=\"card-img-top\" src=\"https://images.unsplash.com/photo-1627281795187-9605af7235b0?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1330&q=80\" class=\"card-img-top\" alt=\"...\">\n\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Browse hardwares</h5>\n          <p class=\"card-text\">Select from our collection of the best desktop computer components!</p>\n          <a routerLink=\"/hardwares\" class=\"btn btn-dark\">Hardwares</a>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n        <div class=\"img-wrapper\">\n          <img src=\"https://images.unsplash.com/photo-1678642851519-15d224598d68?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1880&q=80\" class=\"card-img-top\" alt=\"...\">\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Build your PC</h5>\n          <p class=\"card-text\">There are endless variations for building a strong, unique desktop PC based on your needs.</p>\n        </div>\n        <div class=\"card-footer p-0\">\n          <a routerLink=\"/builder\" class=\"btn btn-dark\">Build a PC</a>\n\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col\">\n      <div class=\"card text-center h-100 opacity-75\">\n        <div class=\"img-wrapper\">\n          <img src=\"https://images.unsplash.com/photo-1623243747526-d1a0413e45c6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1168&q=80\" class=\"card-img-top\" alt=\"...\">\n        </div>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Stay the best</h5>\n          <p class=\"card-text\">If you sign up, you can save multiple builds and come back to compare them anytime.</p>\n          <a routerLink=\"/login\" class=\"btn btn-dark\">Login</a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm!: FormGroup;\n  users!: UserModel[];\n  sub!: Subscription;\n  \n  constructor(\n    private auth: AuthService, \n    private router: Router, \n    private userService: UserHttpService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n    });\n\n    this.sub = this.userService.findAll().subscribe({\n      next: (res) => {\n        this.users = res;\n      },\n      error: err => console.log(err)\n    });\n  }\n\n  get email() { return this.loginForm.get('email')};\n  get password() { return this.loginForm.get('password')};\n\n  //TODO custom validator -> email not found\n  onSubmit(){\n    const userLog = this.loginForm.value;\n    if(!this.users.map(user => user.email).includes(userLog.email)){\n      alert('Account with this email not found');\n      this.loginForm.reset();\n    } else {\n      this.auth.login(userLog).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigate([''])\n        }\n      })\n    }\n  }\n\n}\n","\n<div class=\"form-wrapper d-flex container justify-content-center align-items-center\">\n  \n  <form *ngIf=\"loginForm\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\"\n  class=\"p-5 text-yellow opacity-75\"\n  >\n  <h3 class=\"text-yellow text-center mb-5\">Login</h3>\n\n    <div *ngIf=\"email\" class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n      <div *ngIf=\"email.invalid && email.touched\" class=\"text-danger fw-bold\">A valid email is required.</div>\n    </div>\n    <div *ngIf=\"password\" class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n      <div *ngIf=\"password.invalid && password.touched\" class=\"text-danger fw-bold\">A valid password is required.</div>\n    </div>\n    <!-- <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\">\n      <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n    </div> -->\n    \n    <button [disabled]=\"loginForm.invalid\" type=\"submit\" class=\"btn btn-outline-warning\">\n      Login\n    </button>\n\n    <div class=\"pt-5\">\n      Don't have an account? <span class=\"fw-bold\"><a routerLink=\"/signup\">Sign up now!</a></span>\n    </div>\n\n  </form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { Category, HardwareModel } from 'src/app/models/hardware.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\nimport { HardwareHttpService } from 'src/app/services/http/hardware-http.service';\n\n@Component({\n  selector: 'app-config-details',\n  templateUrl: './config-details.component.html',\n  styleUrls: ['./config-details.component.scss'],\n})\nexport class ConfigDetailsComponent implements OnInit {\n  _id!: any;\n  currentConfig!: ConfigModel;\n\n  detailsForm!: FormGroup;\n  categories!: string[];\n  hardwares!: HardwareModel[];\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private categoryService: CategoryService,\n    // private hwService: HardwareService,\n    private hwService: HardwareHttpService,\n    // private configService: ConfigService\n    private configService: ConfigHttpService\n  ) {}\n\n  ngOnInit(): void {\n    this.detailsForm = new FormGroup({\n      case: new FormControl(''),\n      cpu: new FormControl(''),\n      gpu: new FormControl(''),\n      motherboard: new FormControl(''),\n      monitor: new FormControl(''),\n      psu: new FormControl(''),\n      ram: new FormControl(''),\n      storage: new FormControl(''),\n    });\n\n    this._id = this.activatedRoute.snapshot.paramMap.get('id');\n    this.currentConfig = this.detailsForm.value;\n    this.categories = this.categoryService.categories;\n    this.hwService.findAll().subscribe((res) => {\n      this.hardwares = res;\n    });\n\n    this.activatedRoute.paramMap.subscribe((params) => {\n      let readParam = params.get('id');\n      if (readParam) {\n        this._id = readParam;\n        this.configService.findById(this._id).subscribe({\n          next: (config: ConfigModel) => {\n            this.currentConfig = config;\n            this.detailsForm.patchValue(this.currentConfig);\n          },\n        });\n      }\n    });\n  }\n\n  //TODO update() debug (néha csak refresh után változik )\n  // update(id: any, config: ConfigModel) {\n  //   this.configService.update(id, config).subscribe({\n  //     next: \n  //       this.currentConfig = this.detailsForm.value\n  //     })\n  //     console.log(`Config ID ${this._id} updated`);\n  //     this.router.navigate(['myconfigs'])\n  // };        ez működik, csak typeerror: partialObserver.next is not a function\n  update(id: any, config: ConfigModel) {\n    this.configService.update(id, config).subscribe(() => {\n      // next: \n        this.currentConfig = this.detailsForm.value\n      })\n      console.log(`Config ID ${this._id} updated`);\n      this.router.navigate(['myconfigs'])\n  };\n\n  delete(id: any){\n    if(confirm('Are you sure you want to delete this config?')){\n      this.configService.delete(id).subscribe();\n      console.log(`Config ID ${id} deleted`);\n      this.router.navigate(['myconfigs'])\n    }\n  }\n}\n","<div class=\"container w-50 justify-content-center align-items-center\">\n  <h2>Update config {{currentConfig._id}}</h2>\n\n  <div class=\"p-4 form-wrapper \">\n    <form *ngIf=\"detailsForm\" [formGroup]=\"detailsForm\" (ngSubmit)=\"update(currentConfig._id, detailsForm.value)\" class=\" text-yellow opacity-75\">\n      \n      <div class=\"mb-2 form-group-row\" *ngFor=\"let category of categories; index as i\">\n        \n        <label [for]=\"category.toLowerCase()\" class=\"col-form-label me-2\">\n          {{category}}\n          <select class=\"form-control-sm form-select\" \n          [id]=\"category.toLowerCase()\" [formControlName]=\"category.toLowerCase()\" [name]=\"category\" [value]=\"category\"\n          >\n          <option [disabled]=\"true\" [selected]=\"true\" [hidden]=\"true\" [defaultSelected]=\"true\">\n            Select a {{category}}\n          </option>\n          \n          <ng-container *ngFor=\"let hardware of hardwares; index as j\">\n            <option *ngIf=\"hardware.category === categories[i]\" [value]=\"hardware.name\">\n              {{hardware.name}}\n            </option>\n          </ng-container>\n          \n        </select>\n      </label>\n      <!-- <button class=\"btn btn-success\">+</button> -->\n    </div>\n    \n    <button class=\"btn btn-outline-info\">Update</button>\n    <!-- <button (click)=\"update(currentConfig)\" class=\"btn btn-outline-info\">Update</button> -->\n    <button (click)=\"delete(currentConfig._id)\" class=\"btn btn-outline-danger ms-2\">Delete</button>\n  </form>\n</div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ConfigModel } from 'src/app/models/config.model';\nimport { Category } from 'src/app/models/hardware.model';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { ConfigHttpService } from 'src/app/services/http/config-http.service';\n\n@Component({\n  selector: 'app-myconfigs',\n  templateUrl: './myconfigs.component.html',\n  styleUrls: ['./myconfigs.component.scss']\n})\nexport class MyconfigsComponent implements OnInit {\n\n  configs!: ConfigModel[];\n  categories?: Category[] | string[];\n\n  \n  constructor(\n    // private configService: ConfigService, \n    private configService: ConfigHttpService, \n    private categoryService: CategoryService\n    ) { }\n\n  ngOnInit(): void {\n    // this.configService.findAll().subscribe((res) => {\n    //   this.configs = Object.values(res);\n    // });     basehttp nélkül\n    this.configService.findAll().subscribe({\n      next: res => {\n        this.configs = Object.values(res);\n        console.log(res);\n      },\n      error: err => console.error(err)\n    });\n\n    this.categories = this.categoryService.categories;\n\n  }\n}\n\n\n\n\n// https://source.unsplash.com/random/800x800/?computer\n\n\n// https://source.unsplash.com/random/800x600/?desktop computer motherboard {{ [i] }}\n// https://source.unsplash.com/random/800x600/?gaming+computer {{ [i] }}","<div *ngIf=\"configs\" class=\"container\">\n  <div class=\"row row-cols-md-3 row-cols-lg-4 grid gap-3 justify-content-evenly \">\n    <!-- <div  class=\"col\"> -->\n\n      <!-- <ng-tempate></ng-tempate> -->\n      <div *ngFor=\"let config of configs; index as i\" class=\"card shadow\">\n        <div class=\"card-header\">\n          <img src=\"https://source.unsplash.com/random/800x600/?gaming+computer {{ [i] }}\" class=\"card-img-top\" alt=\"computer\">\n          <a [routerLink]=\"[config._id]\" class=\"btn btn-warning shadow\">Update</a>\n        </div>\n          <div class=\"card-body mx-auto\">\n              <ul class=\"mx-0 px-0\">\n                <li>Config ID: <small>{{ config._id }}</small></li>\n                <li title=\"Case\">{{ config.case }}</li>\n                <li title=\"CPU\">{{ config.cpu }}</li>\n                <li title=\"GPU\">{{ config.gpu }}</li>\n                <li title=\"Motherboard\">{{ config.motherboard }}</li>\n                <li title=\"Monitor\">{{ config.monitor }}</li>\n                <li title=\"PSU\">{{ config.psu }}</li>\n                <li title=\"RAM\">{{ config.ram }}</li>\n                <li title=\"Storage\">{{ config.storage }}</li>\n              </ul>\n        </div>\n      </div>\n    <!-- </div> -->\n\n    \n  </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  user!: UserModel | null;\n  sub!: Subscription\n  \n  constructor(private authService: AuthService) { }\n  \n  ngOnInit(): void {\n    this.sub = this.authService.userObject.subscribe((user)=> {\n      this.user = user;\n      console.log(user);\n    });\n    if(this.user){\n      this.getMe();\n    }\n  };\n\n  ngOnDestroy(): void {\n    // if(this.sub){\n    //   this.sub.unsubscribe();\n    // }\n  }\n\n  getMe(){\n    if(localStorage.getItem('accessToken')){\n      this.authService.me().subscribe()\n    }\n  }\n\n}\n","<nav class=\"navbar navbar-expand-sm bg-body-tertiary\">\n  <div class=\"container-fluid \">\n\n    <a class=\"navbar-brand text-yellow\" routerLink=\"/\">myConfix</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item text-yellow\">\n          <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" routerLink=\"/hardwares\">Hardwares</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" routerLink=\"/builder\">Builder</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" routerLink=\"/myconfigs\">My configs</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link text-yellow\" routerLink=\"/users\">Users</a>\n        </li>\n      </ul>\n    </div>\n    \n    <div *ngIf=\"!user\" class=\"nav-item float-end\">\n      <a class=\"nav-link text-yellow\" routerLink=\"/login\">Login</a>\n    </div>\n    <div *ngIf=\"user\">\n      <a class=\"nav-link d-inline\" *ngIf=\"user && user.email\">{{user.email}}</a>\n      <a class=\"nav-link text-yellow\" routerLink=\"/\">Logout</a>\n    </div>\n\n\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm!: FormGroup;\n  users!: UserModel[];\n  sub!: Subscription;\n\n  constructor(\n    private router: Router, \n    private userService: UserHttpService,\n    private auth: AuthService\n    ) { }\n\n  ngOnInit(): void {\n    this.signupForm = new FormGroup({\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(3)\n      ]),\n      rules: new FormControl(false, [\n        Validators.requiredTrue\n      ])\n    });\n\n    this.sub = this.userService.findAll().subscribe({\n      next: (res) => {\n        this.users = res;\n      },\n      error: err => console.log(err)\n    });\n  }\n\n  get email() { return this.signupForm.get('email')};\n  get password() { return this.signupForm.get('password')};\n  get rules() { return this.signupForm.get('rules')};\n\n  //TODO custom validator -> email in use\n  onSubmit(){\n    const userLog = this.signupForm.value;\n    console.log(userLog);\n    if(this.users.map(user => user.email).includes(userLog.email)){\n      alert('This email has been already registered');\n      this.signupForm.reset();\n    } else {\n      this.userService.create(userLog).subscribe({\n        next: (user) => {\n          console.log(user);\n          this.router.navigate([''])\n        }\n      });\n    }\n    \n  }\n\n}\n","\n<div class=\"form-wrapper d-flex container justify-content-center align-items-center\">\n  \n  <form *ngIf=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\" class=\"p-5 text-yellow opacity-75\">\n    <h3 class=\"text-yellow text-center mb-5\">Sign up</h3>\n\n    <div *ngIf=\"email\" class=\"mb-3\">\n      <label for=\"email\" class=\"form-label\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\">\n      <div *ngIf=\"email.invalid && email.touched\" class=\"text-danger fw-bold\">A valid email is required.</div>\n    </div>\n    <div *ngIf=\"password\" class=\"mb-3\">\n      <label for=\"password\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\">\n      <div *ngIf=\"password.invalid && password.touched\" class=\"text-danger fw-bold\">A valid password is required.</div>\n    </div>\n\n\n\n    <div *ngIf=\"rules\" class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"rules\" formControlName=\"rules\">\n      <label class=\"form-check-label\" for=\"rules\">I accept the rules</label>\n      <div *ngIf=\"(email?.valid && password?.valid && rules.invalid) || rules.invalid && rules.touched\" class=\"text-warning fw-bold\">You must accept the rules.</div>\n    </div>\n    \n    <button [disabled]=\"signupForm.invalid\" type=\"submit\" class=\"btn btn-outline-warning\">\n      Sign Up\n    </button>\n\n\n  </form>\n\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UserModel } from 'src/app/models/user.model';\nimport { UserHttpService } from 'src/app/services/http/user-http.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit, OnDestroy {\n  users!: UserModel[];\n  sub!: Subscription;\n  // TODO guard\n\n  constructor(private http: HttpClient, private userService: UserHttpService) { }\n  \n  ngOnInit(): void {\n    this.sub = this.userService.findAll().subscribe({\n      next: res => this.users = res\n    })\n  };\n  \n  ngOnDestroy(): void {\n    if(this.sub){\n      this.sub.unsubscribe();\n    }\n  };\n}\n","<h2 class=\"text-center text-yellow my-5\">Users</h2>\n\n<div class=\"d-flex container justify-content-center align-items-center\">\n\n  <table class=\"table table-dark table-striped table-hover\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">ID</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      <tr #eachHardware *ngFor=\"let user of users; index as i\">\n        <th scope=\"row\">{{i+1}}.</th>\n        <td>{{user.email}}</td>\n        <td>{{user.username}}</td>\n        <td>{{user?._id}}</td>\n        <!-- <td>\n          <button (click)=\"showMoreInfo(user.name)\" class=\"btn btn-info\" type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#infoModal\" data-backdrop=\"false\"\n          >\n            More\n          </button>\n        </td> -->\n        <!-- <td>\n          <div class=\"btn-group\">\n            <button class=\"btn btn-warning\">Up</button>\n            <button class=\"btn btn-danger\">Del</button>\n          </div>\n        </td> -->\n      </tr>\n    </tbody>\n  </table>\n\n</div>","// export type Category = {\r\n//     Case?: string,\r\n//     CPU?: string,\r\n//     GPU?: string,\r\n//     Motherboard?: string,\r\n//     Monitor?: string,\r\n//     PSU?: string,\r\n//     RAM?: string,\r\n//     Storage?: string\r\n// }\r\n\r\nexport const categories = ['Case', 'CPU', 'GPU', 'Motherboard', 'Monitor', 'PSU', 'RAM', 'Storage'] as const;\r\nexport type Category = typeof categories[number];\r\n\r\nexport interface HardwareModel {\r\n    id?: string;\r\n    name: string;\r\n    category: Category;\r\n    price_usd: number | null;\r\n\r\n    type?: string;\r\n    side_panel_window?: string;\r\n    internal_3_5_bays?: string | number;\r\n\r\n    core_count?: string | number;\r\n    core_clock?: string;\r\n    boost_clock?: string;\r\n    tdp?: string | number;\r\n    integrated_graphics?: string | null;\r\n\r\n    chipset?: string;\r\n\r\n    cpu_socket?: string;\r\n    form_factor?: string;\r\n    memory_max?: string;\r\n    memory_slots?: number;\r\n\r\n    resolution?: string;\r\n    refresh_rate?: string;\r\n\r\n    efficiency_rating?: string;\r\n    wattage?: string;\r\n    modular?: string;\r\n\r\n    speed?: string;\r\n    modules?: string;\r\n\r\n    capacity?: string;\r\n    interface?: string;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { UserModel } from '../models/user.model';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\n\nexport interface userLogModel {\n  accessToken: string;\n  refreshToken: string;\n  user: UserModel\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  BASE_URL = environment.apiUrl;\n\n  private _userObject = new BehaviorSubject<UserModel | null>(null);\n  \n  constructor(private http: HttpClient) { }\n\n  login(userLog: any): Observable<userLogModel> {\n    return this.http.post<userLogModel>(`${this.BASE_URL}login`, userLog).pipe(\n      tap(loginData => {\n        if(loginData.accessToken && loginData.refreshToken){\n          localStorage.setItem('accessToken', loginData.accessToken);\n          localStorage.setItem('refreshToken', loginData.refreshToken);\n        }\n        this._userObject.next(loginData.user)\n        // this._userObject.next(null)\n      })\n    )\n  };\n\n  //TODO refresh + refreshtoken?\n  // refresh(): Observable<{accessToken: string}> {\n  //   const refreshToken = localStorage.getItem('refreshToken')\n  // ...\n  // }\n\n  logout(){\n    //TODO ha lesz refreshtoken\n    // const refreshToken = localStorage.getItem('refreshToken');\n    // localStorage.removeItem('refreshToken');\n    localStorage.removeItem('accessToken');\n    // this.http.post(`${this.BASE_URL}logout`, {refreshToken})\n  }\n\n\n  get userObject(): BehaviorSubject<UserModel | null>{\n    return this._userObject;\n  };\n\n  me(): Observable<{user: UserModel}>{\n    return this.http.get<{user: UserModel}>(`${this.BASE_URL}me`).pipe(\n      tap(user => {\n        console.log(user);\n        console.log('userObject?');\n        this._userObject.next(user.user);\n      })\n    )\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { Category } from '../models/hardware.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  //TODO upper/lower debug\n  categories: string[] | Category[] = ['Case', 'CPU', 'GPU', 'Motherboard', 'Monitor', 'PSU', 'RAM', 'Storage'];\n  // categories: string[] | Category[] = ['case', 'cpu', 'gpu', 'motherboard', 'monitor', 'psu', 'ram', 'storage'];\n  \n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, map } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router){}\n  \n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isLogged = this.authService.userObject.value !== null;\n    if(!isLogged){\n      alert('You have to sign in!');\n      this.router.navigate(['login']);\n      // return false\n    }\n    console.log('this.authService.userObject.value');\n    console.log(this.authService.userObject.value);\n    return isLogged;\n\n    return this.authService.userObject.value !== null ;\n    return this.authService.me().pipe(map(user => {\n      console.log(user);\n      console.log(user.user);\n        return user.user ? true : false;\n      }))\n\n      //TODO ?\n    // const userLoggedin = false;\n    // if(!userLoggedin){\n    //   alert('You have to sign in!');\n    //   this.router.navigate(['login']);\n    //   return false;\n    // } else {\n    //   return true;\n    // }\n\n  }\n  \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BaseHttpService<T> {\n\n  BASE_URL = environment.apiUrl;\n\n  constructor(private http: HttpClient, entity: String) {\n    this.BASE_URL += entity;\n  }\n\n  create(entityObj: T): Observable<T> {\n    return this.http.post<T>(`${this.BASE_URL}`, entityObj);\n  };\n\n  findAll(): Observable<T[]> {\n    return this.http.get<T[]>(`${this.BASE_URL}`);\n  };\n\n  findById(id: any): Observable<T> {\n    return this.http.get<T>(`${this.BASE_URL}/${id}`);\n  };\n\n  update(id: any, entityObj: T): Observable<T> {\n    return this.http.put<T>(`${this.BASE_URL}/${id}`, entityObj);\n  };\n\n  delete(id: any): Observable<any>{\n    return this.http.delete(`${this.BASE_URL}/${id}`)\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ConfigModel } from 'src/app/models/config.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigHttpService extends BaseHttpService<ConfigModel> {\n\n  constructor(http: HttpClient) {\n    super(http, 'myconfigs')\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { HardwareModel } from 'src/app/models/hardware.model';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardwareHttpService extends BaseHttpService<HardwareModel> {\n\n  constructor(http: HttpClient) {\n    super(http, 'hardwares')\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseHttpService } from './base-http.service';\nimport { UserModel } from 'src/app/models/user.model';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserHttpService extends BaseHttpService<UserModel> {\n  // private _userList = new BehaviorSubject<UserModel[] | null>(null);\n\n  constructor(http: HttpClient) {\n    super(http, 'users');\n  }\n\n  // get userList(): BehaviorSubject<UserModel[] | null> {\n  //   return this._userList;\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/'\n  // apiUrl: '/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './../app/services/auth.service';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { catchError, Observable, switchMap, throwError } from \"rxjs\";\n\n@Injectable()\nexport class AuthenticationInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService){}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log('HTTP intercept');\n\n    const token = localStorage.getItem('accessToken');\n    console.log(token);\n    let request = req;\n    \n    if(token){\n       request = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`)\n      })\n    }\n    return next.handle(request).pipe(\n      catchError(err => {\n        console.log(err.status, 'ERROR');\n      if(err.status === 401){\n        return throwError(()=> new Error('Bejelentkezés szükséges'))\n      } else if(err.status === 403){\n        return throwError(()=> new Error('Lejárt a munkamenet'))\n      //   return this.handle403Error(request, next)\n      } else {\n        return throwError(()=> new Error('Oops something happened'))\n      }\n    }));\n  }\n\n  //TODO refresh(?)\n  // handle403Error(req: HttpRequest<any>, next: HttpHandler): Observable<any>{\n  //    return this.authService.refresh().pipe(\n  //       switchMap((tokenData)=> {\n  //         const newRequest = req.clone({\n  //           headers: req.headers.set('Authorization', `Bearer ${tokenData.accessToken}`)\n  //         })\n  //         return next.handle(newRequest);\n  //       })\n  //     )\n  // }\n\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}