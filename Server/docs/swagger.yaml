openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample Blog API
  description: A sample blog API to illustrate REST API concepts
servers:
  - url: http://localhost:3000
paths:
  /person:
    get:
      description: Returns a list of persons
      responses:
        '200':
          description: List of persons returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: Person has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /person/{person_id}:
    get:
      description: Returns the person with the given ID
      parameters:
        - name: person_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes a person
      security:
        - bearerAuth: []
      parameters:
        - name: person_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Person has been deleted'
          content:
            application/json:
              schema:
                type: object
                example: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Person:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        # randomobjdatas:
          # type: object
          # $ref: #/components/schemas/Randomobjdatas
    # Randomobjdatas:
      # type: object
      # required:
        # - aliases
        # - publisher
      # properties:
        # alterEgos:
          # type: string
        # aliases:
          # type: [string]
        # publisher:
          # type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean